"use strict";(self.webpackChunkflutterando_metrics_website=self.webpackChunkflutterando_metrics_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"category","label":"Getting started","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Introduction","href":"/flutterando_metrics/pt-br/docs/getting-started/introduction","docId":"getting-started/introduction"},{"type":"link","label":"Installation and Usage","href":"/flutterando_metrics/pt-br/docs/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Configuration","href":"/flutterando_metrics/pt-br/docs/getting-started/configuration","docId":"getting-started/configuration"}]},{"type":"link","label":"Analyzer Plugin","href":"/flutterando_metrics/pt-br/docs/analyzer-plugin","docId":"analyzer-plugin"},{"type":"category","label":"Command Line Interface","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Analyze","href":"/flutterando_metrics/pt-br/docs/cli/analyze","docId":"cli/analyze"},{"type":"link","label":"Check unnecessary nullable parameters","href":"/flutterando_metrics/pt-br/docs/cli/check-unnecessary-nullable","docId":"cli/check-unnecessary-nullable"},{"type":"link","label":"Check unused code","href":"/flutterando_metrics/pt-br/docs/cli/check-unused-code","docId":"cli/check-unused-code"},{"type":"link","label":"Check unused files","href":"/flutterando_metrics/pt-br/docs/cli/check-unused-files","docId":"cli/check-unused-files"},{"type":"link","label":"Check unused l10n","href":"/flutterando_metrics/pt-br/docs/cli/check-unused-l10n","docId":"cli/check-unused-l10n"}],"href":"/flutterando_metrics/pt-br/docs/cli/"},{"type":"category","label":"Rules","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Common","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"arguments-ordering","href":"/flutterando_metrics/pt-br/docs/rules/common/arguments-ordering","docId":"rules/common/arguments-ordering"},{"type":"link","label":"avoid-banned-imports","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-banned-imports","docId":"rules/common/avoid-banned-imports"},{"type":"link","label":"avoid-cascade-after-if-null","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-cascade-after-if-null","docId":"rules/common/avoid-cascade-after-if-null"},{"type":"link","label":"avoid-collection-methods-with-unrelated-types","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-collection-methods-with-unrelated-types","docId":"rules/common/avoid-collection-methods-with-unrelated-types"},{"type":"link","label":"avoid-double-slash-imports","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-double-slash-imports","docId":"rules/common/avoid-double-slash-imports"},{"type":"link","label":"avoid-duplicate-exports","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-duplicate-exports","docId":"rules/common/avoid-duplicate-exports"},{"type":"link","label":"avoid-dynamic","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-dynamic","docId":"rules/common/avoid-dynamic"},{"type":"link","label":"avoid-global-state","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-global-state","docId":"rules/common/avoid-global-state"},{"type":"link","label":"avoid-ignoring-return-values","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-ignoring-return-values","docId":"rules/common/avoid-ignoring-return-values"},{"type":"link","label":"avoid-late-keyword","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-late-keyword","docId":"rules/common/avoid-late-keyword"},{"type":"link","label":"avoid-missing-enum-constant-in-map","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-missing-enum-constant-in-map","docId":"rules/common/avoid-missing-enum-constant-in-map"},{"type":"link","label":"avoid-nested-conditional-expressions","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-nested-conditional-expressions","docId":"rules/common/avoid-nested-conditional-expressions"},{"type":"link","label":"avoid-non-ascii-symbols","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-non-ascii-symbols","docId":"rules/common/avoid-non-ascii-symbols"},{"type":"link","label":"avoid-non-null-assertion","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-non-null-assertion","docId":"rules/common/avoid-non-null-assertion"},{"type":"link","label":"avoid-passing-async-when-sync-expected","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-passing-async-when-sync-expected","docId":"rules/common/avoid-passing-async-when-sync-expected"},{"type":"link","label":"avoid-redundant-async","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-redundant-async","docId":"rules/common/avoid-redundant-async"},{"type":"link","label":"avoid-throw-in-catch-block","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-throw-in-catch-block","docId":"rules/common/avoid-throw-in-catch-block"},{"type":"link","label":"avoid-top-level-members-in-tests","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-top-level-members-in-tests","docId":"rules/common/avoid-top-level-members-in-tests"},{"type":"link","label":"avoid-unnecessary-conditionals","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-unnecessary-conditionals","docId":"rules/common/avoid-unnecessary-conditionals"},{"type":"link","label":"avoid-unnecessary-type-assertions","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-unnecessary-type-assertions","docId":"rules/common/avoid-unnecessary-type-assertions"},{"type":"link","label":"avoid-unnecessary-type-casts","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-unnecessary-type-casts","docId":"rules/common/avoid-unnecessary-type-casts"},{"type":"link","label":"avoid-unrelated-type-assertions","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-unrelated-type-assertions","docId":"rules/common/avoid-unrelated-type-assertions"},{"type":"link","label":"avoid-unused-parameters","href":"/flutterando_metrics/pt-br/docs/rules/common/avoid-unused-parameters","docId":"rules/common/avoid-unused-parameters"},{"type":"link","label":"ban-name","href":"/flutterando_metrics/pt-br/docs/rules/common/ban-name","docId":"rules/common/ban-name"},{"type":"link","label":"binary-expression-operand-order","href":"/flutterando_metrics/pt-br/docs/rules/common/binary-expression-operand-order","docId":"rules/common/binary-expression-operand-order"},{"type":"link","label":"double-literal-format","href":"/flutterando_metrics/pt-br/docs/rules/common/double-literal-format","docId":"rules/common/double-literal-format"},{"type":"link","label":"format-comment","href":"/flutterando_metrics/pt-br/docs/rules/common/format-comment","docId":"rules/common/format-comment"},{"type":"link","label":"list-all-equatable-fields","href":"/flutterando_metrics/pt-br/docs/rules/common/list-all-equatable-fields","docId":"rules/common/list-all-equatable-fields"},{"type":"link","label":"member-ordering","href":"/flutterando_metrics/pt-br/docs/rules/common/member-ordering","docId":"rules/common/member-ordering"},{"type":"link","label":"missing-test-assertion","href":"/flutterando_metrics/pt-br/docs/rules/common/missing-test-assertion","docId":"rules/common/missing-test-assertion"},{"type":"link","label":"newline-before-return","href":"/flutterando_metrics/pt-br/docs/rules/common/newline-before-return","docId":"rules/common/newline-before-return"},{"type":"link","label":"no-boolean-literal-compare","href":"/flutterando_metrics/pt-br/docs/rules/common/no-boolean-literal-compare","docId":"rules/common/no-boolean-literal-compare"},{"type":"link","label":"no-empty-block","href":"/flutterando_metrics/pt-br/docs/rules/common/no-empty-block","docId":"rules/common/no-empty-block"},{"type":"link","label":"no-equal-arguments","href":"/flutterando_metrics/pt-br/docs/rules/common/no-equal-arguments","docId":"rules/common/no-equal-arguments"},{"type":"link","label":"no-equal-then-else","href":"/flutterando_metrics/pt-br/docs/rules/common/no-equal-then-else","docId":"rules/common/no-equal-then-else"},{"type":"link","label":"no-magic-number","href":"/flutterando_metrics/pt-br/docs/rules/common/no-magic-number","docId":"rules/common/no-magic-number"},{"type":"link","label":"no-object-declaration","href":"/flutterando_metrics/pt-br/docs/rules/common/no-object-declaration","docId":"rules/common/no-object-declaration"},{"type":"link","label":"prefer-async-await","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-async-await","docId":"rules/common/prefer-async-await"},{"type":"link","label":"prefer-commenting-analyzer-ignores","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-commenting-analyzer-ignores","docId":"rules/common/prefer-commenting-analyzer-ignores"},{"type":"link","label":"prefer-conditional-expressions","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-conditional-expressions","docId":"rules/common/prefer-conditional-expressions"},{"type":"link","label":"prefer-correct-identifier-length","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-correct-identifier-length","docId":"rules/common/prefer-correct-identifier-length"},{"type":"link","label":"prefer-correct-test-file-name","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-correct-test-file-name","docId":"rules/common/prefer-correct-test-file-name"},{"type":"link","label":"prefer-correct-type-name","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-correct-type-name","docId":"rules/common/prefer-correct-type-name"},{"type":"link","label":"prefer-enums-by-name","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-enums-by-name","docId":"rules/common/prefer-enums-by-name"},{"type":"link","label":"prefer-first","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-first","docId":"rules/common/prefer-first"},{"type":"link","label":"prefer-immediate-return","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-immediate-return","docId":"rules/common/prefer-immediate-return"},{"type":"link","label":"prefer-iterable-of","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-iterable-of","docId":"rules/common/prefer-iterable-of"},{"type":"link","label":"prefer-last","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-last","docId":"rules/common/prefer-last"},{"type":"link","label":"prefer-match-file-name","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-match-file-name","docId":"rules/common/prefer-match-file-name"},{"type":"link","label":"prefer-moving-to-variable","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-moving-to-variable","docId":"rules/common/prefer-moving-to-variable"},{"type":"link","label":"prefer-static-class","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-static-class","docId":"rules/common/prefer-static-class"},{"type":"link","label":"prefer-trailing-comma","href":"/flutterando_metrics/pt-br/docs/rules/common/prefer-trailing-comma","docId":"rules/common/prefer-trailing-comma"},{"type":"link","label":"tag-name","href":"/flutterando_metrics/pt-br/docs/rules/common/tag-name","docId":"rules/common/tag-name"}]},{"type":"category","label":"Flutter","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"always-remove-listener","href":"/flutterando_metrics/pt-br/docs/rules/flutter/always-remove-listener","docId":"rules/flutter/always-remove-listener"},{"type":"link","label":"avoid-border-all","href":"/flutterando_metrics/pt-br/docs/rules/flutter/avoid-border-all","docId":"rules/flutter/avoid-border-all"},{"type":"link","label":"avoid-expanded-as-spacer","href":"/flutterando_metrics/pt-br/docs/rules/flutter/avoid-expanded-as-spacer","docId":"rules/flutter/avoid-expanded-as-spacer"},{"type":"link","label":"avoid-returning-widgets","href":"/flutterando_metrics/pt-br/docs/rules/flutter/avoid-returning-widgets","docId":"rules/flutter/avoid-returning-widgets"},{"type":"link","label":"avoid-shrink-wrap-in-lists","href":"/flutterando_metrics/pt-br/docs/rules/flutter/avoid-shrink-wrap-in-lists","docId":"rules/flutter/avoid-shrink-wrap-in-lists"},{"type":"link","label":"avoid-unnecessary-setstate","href":"/flutterando_metrics/pt-br/docs/rules/flutter/avoid-unnecessary-setstate","docId":"rules/flutter/avoid-unnecessary-setstate"},{"type":"link","label":"avoid-wrapping-in-padding","href":"/flutterando_metrics/pt-br/docs/rules/flutter/avoid-wrapping-in-padding","docId":"rules/flutter/avoid-wrapping-in-padding"},{"type":"link","label":"check-for-equals-in-render-object-setters","href":"/flutterando_metrics/pt-br/docs/rules/flutter/check-for-equals-in-render-object-setters","docId":"rules/flutter/check-for-equals-in-render-object-setters"},{"type":"link","label":"consistent-update-render-object","href":"/flutterando_metrics/pt-br/docs/rules/flutter/consistent-update-render-object","docId":"rules/flutter/consistent-update-render-object"},{"type":"link","label":"prefer-const-border-radius","href":"/flutterando_metrics/pt-br/docs/rules/flutter/prefer-const-border-radius","docId":"rules/flutter/prefer-const-border-radius"},{"type":"link","label":"prefer-correct-edge-insets-constructor","href":"/flutterando_metrics/pt-br/docs/rules/flutter/prefer-correct-edge-insets-constructor","docId":"rules/flutter/prefer-correct-edge-insets-constructor"},{"type":"link","label":"prefer-extracting-callbacks","href":"/flutterando_metrics/pt-br/docs/rules/flutter/prefer-extracting-callbacks","docId":"rules/flutter/prefer-extracting-callbacks"},{"type":"link","label":"prefer-single-widget-per-file","href":"/flutterando_metrics/pt-br/docs/rules/flutter/prefer-single-widget-per-file","docId":"rules/flutter/prefer-single-widget-per-file"},{"type":"link","label":"prefer-using-list-view","href":"/flutterando_metrics/pt-br/docs/rules/flutter/prefer-using-list-view","docId":"rules/flutter/prefer-using-list-view"},{"type":"link","label":"use-setstate-synchronously","href":"/flutterando_metrics/pt-br/docs/rules/flutter/use-setstate-synchronously","docId":"rules/flutter/use-setstate-synchronously"}]},{"type":"category","label":"Intl","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"prefer-intl-name","href":"/flutterando_metrics/pt-br/docs/rules/intl/prefer-intl-name","docId":"rules/intl/prefer-intl-name"},{"type":"link","label":"prefer-provide-intl-description","href":"/flutterando_metrics/pt-br/docs/rules/intl/prefer-provide-intl-description","docId":"rules/intl/prefer-provide-intl-description"},{"type":"link","label":"provide-correct-intl-args","href":"/flutterando_metrics/pt-br/docs/rules/intl/provide-correct-intl-args","docId":"rules/intl/provide-correct-intl-args"}]},{"type":"category","label":"Angular","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"avoid-preserve-whitespace-false","href":"/flutterando_metrics/pt-br/docs/rules/angular/avoid-preserve-whitespace-false","docId":"rules/angular/avoid-preserve-whitespace-false"},{"type":"link","label":"component-annotation-arguments-ordering","href":"/flutterando_metrics/pt-br/docs/rules/angular/component-annotation-arguments-ordering","docId":"rules/angular/component-annotation-arguments-ordering"},{"type":"link","label":"prefer-on-push-cd-strategy","href":"/flutterando_metrics/pt-br/docs/rules/angular/prefer-on-push-cd-strategy","docId":"rules/angular/prefer-on-push-cd-strategy"}]}],"href":"/flutterando_metrics/pt-br/docs/rules/"},{"type":"category","label":"Metrics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cyclomatic Complexity","href":"/flutterando_metrics/pt-br/docs/metrics/cyclomatic-complexity","docId":"metrics/cyclomatic-complexity"},{"type":"link","label":"Halstead Volume","href":"/flutterando_metrics/pt-br/docs/metrics/halstead-volume","docId":"metrics/halstead-volume"},{"type":"link","label":"Lines of Code","href":"/flutterando_metrics/pt-br/docs/metrics/lines-of-code","docId":"metrics/lines-of-code"},{"type":"link","label":"Maintainability Index","href":"/flutterando_metrics/pt-br/docs/metrics/maintainability-index","docId":"metrics/maintainability-index"},{"type":"link","label":"Maximum Nesting","href":"/flutterando_metrics/pt-br/docs/metrics/maximum-nesting-level","docId":"metrics/maximum-nesting-level"},{"type":"link","label":"Number of Methods","href":"/flutterando_metrics/pt-br/docs/metrics/number-of-methods","docId":"metrics/number-of-methods"},{"type":"link","label":"Number of Parameters","href":"/flutterando_metrics/pt-br/docs/metrics/number-of-parameters","docId":"metrics/number-of-parameters"},{"type":"link","label":"Source lines of Code","href":"/flutterando_metrics/pt-br/docs/metrics/source-lines-of-code","docId":"metrics/source-lines-of-code"},{"type":"link","label":"Technical Debt","href":"/flutterando_metrics/pt-br/docs/metrics/technical_debt","docId":"metrics/technical_debt"},{"type":"link","label":"Weight Of a Class","href":"/flutterando_metrics/pt-br/docs/metrics/weight-of-class","docId":"metrics/weight-of-class"}],"href":"/flutterando_metrics/pt-br/docs/metrics/"},{"type":"category","label":"Anti-patterns","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Long Method","href":"/flutterando_metrics/pt-br/docs/anti-patterns/long-method","docId":"anti-patterns/long-method"},{"type":"link","label":"Long Parameter List","href":"/flutterando_metrics/pt-br/docs/anti-patterns/long-parameter-list","docId":"anti-patterns/long-parameter-list"}],"href":"/flutterando_metrics/pt-br/docs/anti-patterns/"},{"type":"category","label":"Integrations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Codemagic","href":"/flutterando_metrics/pt-br/docs/integrations/codemagic","docId":"integrations/codemagic"},{"type":"link","label":"GitHub Action","href":"/flutterando_metrics/pt-br/docs/integrations/github-action","docId":"integrations/github-action"}]}]},"docs":{"analyzer-plugin":{"id":"analyzer-plugin","title":"Analyzer Plugin","description":"Flutterando Metrics can be used as a plugin for the Dart analyzer. All issues produced by provided rules or anti-patterns will be highlighted in IDE.","sidebar":"sidebar"},"anti-patterns/index":{"id":"anti-patterns/index","title":"Anti-patterns","description":"Anti-patterns configuration is described here.","sidebar":"sidebar"},"anti-patterns/long-method":{"id":"anti-patterns/long-method","title":"Long Method","description":"Long blocks of code are difficult to reuse and understand because they are usually responsible for more than one thing. Separating those to several short ones with proper names helps you reuse your code and understand it better without reading methods body.","sidebar":"sidebar"},"anti-patterns/long-parameter-list":{"id":"anti-patterns/long-parameter-list","title":"Long Parameter List","description":"Long parameter lists are difficult to understand and use. Wrapping them into an object allows grouping parameters and change transferred data only by the object modification. When you\'re working with objects, you should pass just enough so that the method can get the data it needs.","sidebar":"sidebar"},"cli/analyze":{"id":"cli/analyze","title":"Analyze","description":"Reports code metrics, rules and anti-patterns violations. To execute the command, run","sidebar":"sidebar"},"cli/check-unnecessary-nullable":{"id":"cli/check-unnecessary-nullable","title":"Check unnecessary nullable parameters","description":"Checks unnecessary nullable parameters in functions, methods, constructors. Removing unnecessary nullables can help reduce amount of checks in the code.","sidebar":"sidebar"},"cli/check-unused-code":{"id":"cli/check-unused-code","title":"Check unused code","description":"Checks unused classes, functions, top level variables, extensions, enums, mixins and type aliases.","sidebar":"sidebar"},"cli/check-unused-files":{"id":"cli/check-unused-files","title":"Check unused files","description":"Checks unused *.dart files. To execute the command, run","sidebar":"sidebar"},"cli/check-unused-l10n":{"id":"cli/check-unused-l10n","title":"Check unused l10n","description":"Checks unused Dart class members, that encapsulates the app\u2019s localized values.","sidebar":"sidebar"},"cli/index":{"id":"cli/index","title":"CLI","description":"To use the package as a command-line tool, run","sidebar":"sidebar"},"getting-started/configuration":{"id":"getting-started/configuration","title":"Configuration","description":"To configure the package add a flutterandometrics entry to analysisoptions.yaml. This configuration is used by both CLI and the analyzer plugin.","sidebar":"sidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installing the package","description":"To install the package as a dev dependency run","sidebar":"sidebar"},"getting-started/introduction":{"id":"getting-started/introduction","title":"Introduction","description":"Flutterando Metrics is a static analysis tool that helps you analyse and improve your code quality.","sidebar":"sidebar"},"integrations/codemagic":{"id":"integrations/codemagic","title":"Codemagic","description":"Codemagic is a CI/CD solution which helps you test and release your Flutter apps with zero configuration and no pain.","sidebar":"sidebar"},"integrations/github-action":{"id":"integrations/github-action","title":"GitHub Action","description":"Flutterando Metrics GitHub Action allows you to integrate Flutterando Metrics into your CI/CD process and get code quality reports inside PR\'s.","sidebar":"sidebar"},"metrics/cyclomatic-complexity":{"id":"metrics/cyclomatic-complexity","title":"Cyclomatic Complexity","description":"Number of linearly independent paths through a block of code. Conditional operators or loops increases the number of paths in a code. The more paths, the higher the number of test cases that need to be implemented. The metric complies with McCabe\'s original definition:","sidebar":"sidebar"},"metrics/halstead-volume":{"id":"metrics/halstead-volume","title":"Halstead Volume","description":"The Halstead metrics are based on the numbers of operators and operands.","sidebar":"sidebar"},"metrics/index":{"id":"metrics/index","title":"Metrics","description":"Metrics are grouped by a category to help you understand their purpose.","sidebar":"sidebar"},"metrics/lines-of-code":{"id":"metrics/lines-of-code","title":"Lines of Code","description":"The lines of code are the total number of lines in a method (or function). The comment lines, and the blank lines are also counted. A longer method is often difficult to maintain, tend to do a lot of things and can make it hard following what\'s going on.","sidebar":"sidebar"},"metrics/maintainability-index":{"id":"metrics/maintainability-index","title":"Maintainability Index","description":"Maintainability Index is a software metric which measures how maintainable (easy to support and change) the source code is. The maintainability index is calculated as a factored formula consisting of Source Lines Of Code, Cyclomatic Complexity and Halstead Volume.","sidebar":"sidebar"},"metrics/maximum-nesting-level":{"id":"metrics/maximum-nesting-level","title":"Maximum Nesting","description":"Maximum Nesting Level this is the maximum level of nesting blocks / control structures that are present in a method (or function). Code with deep nesting level are often complex and tough to maintain.","sidebar":"sidebar"},"metrics/number-of-methods":{"id":"metrics/number-of-methods","title":"Number of Methods","description":"The number of methods is the total number of methods in a class (or mixin, or extension). Too many methods indicate a high complexity.","sidebar":"sidebar"},"metrics/number-of-parameters":{"id":"metrics/number-of-parameters","title":"Number of Parameters","description":"The number of parameters is the number of parameters received by a method (or function). If a method receive too many parameters, it is difficult to call and also difficult to change if it\'s called from many places.","sidebar":"sidebar"},"metrics/source-lines-of-code":{"id":"metrics/source-lines-of-code","title":"Source lines of Code","description":"Source lines of Code is an approximate number of source code lines in a function or method. Blank or comment lines are not counted.","sidebar":"sidebar"},"metrics/technical_debt":{"id":"metrics/technical_debt","title":"Technical Debt","description":"The cost of additional rework caused by choosing an easy (limited) solution now instead of using a better approach that would take longer. The metric count debt based on pattern:","sidebar":"sidebar"},"metrics/weight-of-class":{"id":"metrics/weight-of-class","title":"Weight Of a Class","description":"Number of functional public methods divided by the total number of public methods.","sidebar":"sidebar"},"rules/angular/avoid-preserve-whitespace-false":{"id":"rules/angular/avoid-preserve-whitespace-false","title":"avoid-preserve-whitespace-false","description":"Avoid setting preserveWhitespace in Angular @Component annotations to false explicitly. Its default value is already false.","sidebar":"sidebar"},"rules/angular/component-annotation-arguments-ordering":{"id":"rules/angular/component-annotation-arguments-ordering","title":"component-annotation-arguments-ordering","description":"Enforces Angular @Component annotation arguments ordering.","sidebar":"sidebar"},"rules/angular/prefer-on-push-cd-strategy":{"id":"rules/angular/prefer-on-push-cd-strategy","title":"prefer-on-push-cd-strategy","description":"Prefer setting changeDetection: ChangeDetectionStrategy.OnPush in Angular @Component annotations.","sidebar":"sidebar"},"rules/common/arguments-ordering":{"id":"rules/common/arguments-ordering","title":"arguments-ordering","description":"Enforces named argument order in function and constructor invocations to be the same as corresponding named parameter declaration order.","sidebar":"sidebar"},"rules/common/avoid-banned-imports":{"id":"rules/common/avoid-banned-imports","title":"avoid-banned-imports","description":"Configure some imports that you want to ban.","sidebar":"sidebar"},"rules/common/avoid-cascade-after-if-null":{"id":"rules/common/avoid-cascade-after-if-null","title":"avoid-cascade-after-if-null","description":"Warns when a cascade expression is used after if null (??) binary expression","sidebar":"sidebar"},"rules/common/avoid-collection-methods-with-unrelated-types":{"id":"rules/common/avoid-collection-methods-with-unrelated-types","title":"avoid-collection-methods-with-unrelated-types","description":"Avoid using collection methods with unrelated types, such as accessing a map of integers using a string key.","sidebar":"sidebar"},"rules/common/avoid-double-slash-imports":{"id":"rules/common/avoid-double-slash-imports","title":"avoid-double-slash-imports","description":"Warns when an import/export directive contains a double slash.","sidebar":"sidebar"},"rules/common/avoid-duplicate-exports":{"id":"rules/common/avoid-duplicate-exports","title":"avoid-duplicate-exports","description":"Warns when a file has multiple exports declarations with the same URI.","sidebar":"sidebar"},"rules/common/avoid-dynamic":{"id":"rules/common/avoid-dynamic","title":"avoid-dynamic","description":"Warns when the dynamic type is used as a variable type in a declaration, return type of a function, etc. Using dynamic is considered unsafe since it can easily result in runtime errors.","sidebar":"sidebar"},"rules/common/avoid-global-state":{"id":"rules/common/avoid-global-state","title":"avoid-global-state","description":"The rule should violate on not final and non-const top-level variables.","sidebar":"sidebar"},"rules/common/avoid-ignoring-return-values":{"id":"rules/common/avoid-ignoring-return-values","title":"avoid-ignoring-return-values","description":"Warns when a return value of a method or function invocation or a class instance property access is not used.","sidebar":"sidebar"},"rules/common/avoid-late-keyword":{"id":"rules/common/avoid-late-keyword","title":"avoid-late-keyword","description":"Warns when a field or variable is declared with a late keyword.","sidebar":"sidebar"},"rules/common/avoid-missing-enum-constant-in-map":{"id":"rules/common/avoid-missing-enum-constant-in-map","title":"avoid-missing-enum-constant-in-map","description":"Warns when a enum constant is missing in a map declaration.","sidebar":"sidebar"},"rules/common/avoid-nested-conditional-expressions":{"id":"rules/common/avoid-nested-conditional-expressions","title":"avoid-nested-conditional-expressions","description":"Checks for nested conditional expressions.","sidebar":"sidebar"},"rules/common/avoid-non-ascii-symbols":{"id":"rules/common/avoid-non-ascii-symbols","title":"avoid-non-ascii-symbols","description":"Warns when a string literal contains non ascii characters. This might indicate that the string was not localized.","sidebar":"sidebar"},"rules/common/avoid-non-null-assertion":{"id":"rules/common/avoid-non-null-assertion","title":"avoid-non-null-assertion","description":"Warns when non null assertion operator (! or \u201cbang\u201d operator) is used for a property access or method invocation. The operator check works at runtime and it may fail and throw a runtime exception.","sidebar":"sidebar"},"rules/common/avoid-passing-async-when-sync-expected":{"id":"rules/common/avoid-passing-async-when-sync-expected","title":"avoid-passing-async-when-sync-expected","description":"Avoid passing asynchronous function as an argument where a synchronous function is expected.","sidebar":"sidebar"},"rules/common/avoid-redundant-async":{"id":"rules/common/avoid-redundant-async","title":"avoid-redundant-async","description":"Checks for redundant async in a method or function body.","sidebar":"sidebar"},"rules/common/avoid-throw-in-catch-block":{"id":"rules/common/avoid-throw-in-catch-block","title":"avoid-throw-in-catch-block","description":"Call throw in a catch block loses the original stack trace and the original exception.","sidebar":"sidebar"},"rules/common/avoid-top-level-members-in-tests":{"id":"rules/common/avoid-top-level-members-in-tests","title":"avoid-top-level-members-in-tests","description":"Warns when a public top-level member (expect the entrypoint) is declared inside a test file.","sidebar":"sidebar"},"rules/common/avoid-unnecessary-conditionals":{"id":"rules/common/avoid-unnecessary-conditionals","title":"avoid-unnecessary-conditionals","description":"Checks for unnessesary conditional expressions.","sidebar":"sidebar"},"rules/common/avoid-unnecessary-type-assertions":{"id":"rules/common/avoid-unnecessary-type-assertions","title":"avoid-unnecessary-type-assertions","description":"Warns about unnecessary usage of is and whereType operators.","sidebar":"sidebar"},"rules/common/avoid-unnecessary-type-casts":{"id":"rules/common/avoid-unnecessary-type-casts","title":"avoid-unnecessary-type-casts","description":"Warns about of unnecessary use of casting operators.","sidebar":"sidebar"},"rules/common/avoid-unrelated-type-assertions":{"id":"rules/common/avoid-unrelated-type-assertions","title":"avoid-unrelated-type-assertions","description":"Warns about unrelated usages of is operator.","sidebar":"sidebar"},"rules/common/avoid-unused-parameters":{"id":"rules/common/avoid-unused-parameters","title":"avoid-unused-parameters","description":"Checks for unused parameters inside a function or method body.","sidebar":"sidebar"},"rules/common/ban-name":{"id":"rules/common/ban-name","title":"ban-name","description":"Configure some names that you want to ban.","sidebar":"sidebar"},"rules/common/binary-expression-operand-order":{"id":"rules/common/binary-expression-operand-order","title":"binary-expression-operand-order","description":"Warns when a literal value is on the left hand side in a binary expressions.","sidebar":"sidebar"},"rules/common/double-literal-format":{"id":"rules/common/double-literal-format","title":"double-literal-format","description":"Checks that double literals should begin with 0. instead of just ., and should not end with a trailing 0. Helps keep a consistent style of numeric literals and decrease potential typos.","sidebar":"sidebar"},"rules/common/format-comment":{"id":"rules/common/format-comment","title":"format-comment","description":"Prefer format comments like sentences.","sidebar":"sidebar"},"rules/common/list-all-equatable-fields":{"id":"rules/common/list-all-equatable-fields","title":"list-all-equatable-fields","description":"Warns when a field is not added to props getter of a class that extends Equtable or EquatableMixin.","sidebar":"sidebar"},"rules/common/member-ordering":{"id":"rules/common/member-ordering","title":"member-ordering","description":"Enforces extended member ordering.","sidebar":"sidebar"},"rules/common/missing-test-assertion":{"id":"rules/common/missing-test-assertion","title":"missing-test-assertion","description":"Warns that there is no assertion in the test.","sidebar":"sidebar"},"rules/common/newline-before-return":{"id":"rules/common/newline-before-return","title":"newline-before-return","description":"Enforces blank line between statements and return in a block.","sidebar":"sidebar"},"rules/common/no-boolean-literal-compare":{"id":"rules/common/no-boolean-literal-compare","title":"no-boolean-literal-compare","description":"Warns on comparison to a boolean literal, as in x == true. Comparing boolean values to boolean literals is unnecessary, as those expressions will result in booleans too. Just use the boolean values directly or negate them.","sidebar":"sidebar"},"rules/common/no-empty-block":{"id":"rules/common/no-empty-block","title":"no-empty-block","description":"Disallows empty blocks except catch clause block. Blocks with a todo comment inside are not considered empty.","sidebar":"sidebar"},"rules/common/no-equal-arguments":{"id":"rules/common/no-equal-arguments","title":"no-equal-arguments","description":"Warns when equal arguments passed to a function or method invocation.","sidebar":"sidebar"},"rules/common/no-equal-then-else":{"id":"rules/common/no-equal-then-else","title":"no-equal-then-else","description":"Warns when if statement has equal then and else statements or conditional expression has equal then and else expressions.","sidebar":"sidebar"},"rules/common/no-magic-number":{"id":"rules/common/no-magic-number","title":"no-magic-number","description":"Warns against using number literals outside of named constants or variables. Exceptions are made for common constants (by default: -1, 0 and 1) and for literals inside DateTime constructor as there is no way to create const DateTime and extracting each int argument to separate named constant is far too inconvenient.","sidebar":"sidebar"},"rules/common/no-object-declaration":{"id":"rules/common/no-object-declaration","title":"no-object-declaration","description":"Warns when a class member is declared with Object type.","sidebar":"sidebar"},"rules/common/prefer-async-await":{"id":"rules/common/prefer-async-await","title":"prefer-async-await","description":"Recommends to use async/await syntax to handle Futures result instead of .then() invocation. Also can help prevent errors with mixed await and .then() usages, since awaiting the result of a Future with .then() invocation awaits the completion of .then().","sidebar":"sidebar"},"rules/common/prefer-commenting-analyzer-ignores":{"id":"rules/common/prefer-commenting-analyzer-ignores","title":"prefer-commenting-analyzer-ignores","description":"Warns when // ignore: comments are left without any additional description why this ignore is applied.","sidebar":"sidebar"},"rules/common/prefer-conditional-expressions":{"id":"rules/common/prefer-conditional-expressions","title":"prefer-conditional-expressions","description":"Recommends to use a conditional expression instead of assigning to the same thing or return statement in each branch of an if statement.","sidebar":"sidebar"},"rules/common/prefer-correct-identifier-length":{"id":"rules/common/prefer-correct-identifier-length","title":"prefer-correct-identifier-length","description":"The rule checks the length of variable names in classes, functions, extensions, mixins, and also checks the value of enum.","sidebar":"sidebar"},"rules/common/prefer-correct-test-file-name":{"id":"rules/common/prefer-correct-test-file-name","title":"prefer-correct-test-file-name","description":"Warns if the file within /test contains a main, but the file name doesn\'t end with _test.dart.","sidebar":"sidebar"},"rules/common/prefer-correct-type-name":{"id":"rules/common/prefer-correct-type-name","title":"prefer-correct-type-name","description":"Rule checks that the type name should only contain alphanumeric characters, start with an uppercase character and span between min-length and max-length characters in length.","sidebar":"sidebar"},"rules/common/prefer-enums-by-name":{"id":"rules/common/prefer-enums-by-name","title":"prefer-enums-by-name","description":"Since Dart 2.15 it\'s possible to use byName method on enum values prop instead of searching the value with firstWhere.","sidebar":"sidebar"},"rules/common/prefer-first":{"id":"rules/common/prefer-first","title":"prefer-first","description":"Warns when the first element of an Iterable or a List is accessed by list[0] or iterable.elementAt(0) instead of calling iterable.first.","sidebar":"sidebar"},"rules/common/prefer-immediate-return":{"id":"rules/common/prefer-immediate-return","title":"prefer-immediate-return","description":"Declaring a local variable only to immediately return it might be considered a bad practice. The name of a function or a class method with its return type should give enough information about what should be returned.","sidebar":"sidebar"},"rules/common/prefer-iterable-of":{"id":"rules/common/prefer-iterable-of","title":"prefer-iterable-of","description":"Warns when List.from() factory is used instead of List.of().","sidebar":"sidebar"},"rules/common/prefer-last":{"id":"rules/common/prefer-last","title":"prefer-last","description":"Warns when the last element of an Iterable is accessed by iterable[iterable.length - 1] or iterable.elementAt(iterable.length - 1) instead of calling iterable.last.","sidebar":"sidebar"},"rules/common/prefer-match-file-name":{"id":"rules/common/prefer-match-file-name","title":"prefer-match-file-name","description":"Warns if the file name does not match the name of the first public class / mixin / extension / enum in the file or a private one if there are no public entries.","sidebar":"sidebar"},"rules/common/prefer-moving-to-variable":{"id":"rules/common/prefer-moving-to-variable","title":"prefer-moving-to-variable","description":"Warns when a property access or a method invocation start with duplicated chains of other invocations / accesses inside a single function or method block.","sidebar":"sidebar"},"rules/common/prefer-static-class":{"id":"rules/common/prefer-static-class","title":"prefer-static-class","description":"Suggests to use static class member instead of global constants, variables and functions.","sidebar":"sidebar"},"rules/common/prefer-trailing-comma":{"id":"rules/common/prefer-trailing-comma","title":"prefer-trailing-comma","description":"Check for trailing comma for arguments, parameters, enum values and collections.","sidebar":"sidebar"},"rules/common/tag-name":{"id":"rules/common/tag-name","title":"tag-name","description":"Warns when tag name does not match class name.","sidebar":"sidebar"},"rules/flutter/always-remove-listener":{"id":"rules/flutter/always-remove-listener","title":"always-remove-listener","description":"Warns when an event listener is added but never removed.","sidebar":"sidebar"},"rules/flutter/avoid-border-all":{"id":"rules/flutter/avoid-border-all","title":"avoid-border-all","description":"Border.all constructor calls const Border.fromBorderSide constructor under the hood. This rule allows to replace Border.all with const Border.fromBorderSide.","sidebar":"sidebar"},"rules/flutter/avoid-expanded-as-spacer":{"id":"rules/flutter/avoid-expanded-as-spacer","title":"avoid-expanded-as-spacer","description":"The rule detects Expanded widgets that contain empty SizedBox/Container and proposes to replace them with the Spacer widget.","sidebar":"sidebar"},"rules/flutter/avoid-returning-widgets":{"id":"rules/flutter/avoid-returning-widgets","title":"avoid-returning-widgets","description":"Warns when a method, function or getter returns a Widget or subclass of a Widget.","sidebar":"sidebar"},"rules/flutter/avoid-shrink-wrap-in-lists":{"id":"rules/flutter/avoid-shrink-wrap-in-lists","title":"avoid-shrink-wrap-in-lists","description":"Warns when a ListView widget with shrinkWrap parameter is wrapped in a Column, Row or another ListView widget.","sidebar":"sidebar"},"rules/flutter/avoid-unnecessary-setstate":{"id":"rules/flutter/avoid-unnecessary-setstate","title":"avoid-unnecessary-setstate","description":"Warns when setState is called inside initState, didUpdateWidget or build methods and when it\'s called from a sync method that is called inside those methods.","sidebar":"sidebar"},"rules/flutter/avoid-wrapping-in-padding":{"id":"rules/flutter/avoid-wrapping-in-padding","title":"avoid-wrapping-in-padding","description":"Warns when a widget is wrapped in a Padding widget but has a padding settings by itself.","sidebar":"sidebar"},"rules/flutter/check-for-equals-in-render-object-setters":{"id":"rules/flutter/check-for-equals-in-render-object-setters","title":"check-for-equals-in-render-object-setters","description":"Warns when a RenderObject setter doesn\'t have an equality check for the new value.","sidebar":"sidebar"},"rules/flutter/consistent-update-render-object":{"id":"rules/flutter/consistent-update-render-object","title":"consistent-update-render-object","description":"Warns when an updateRenderObject method is absent or doesn\'t update all fields set in createRenderObject.","sidebar":"sidebar"},"rules/flutter/prefer-const-border-radius":{"id":"rules/flutter/prefer-const-border-radius","title":"prefer-const-border-radius","description":"BorderRadius.circular constructor calls const BorderRadius.all constructor under the hood. This rule allows to replace BorderRadius.circular(value) with const BorderRadius.all(Radius.circular(value)) if radius is a constant value.","sidebar":"sidebar"},"rules/flutter/prefer-correct-edge-insets-constructor":{"id":"rules/flutter/prefer-correct-edge-insets-constructor","title":"prefer-correct-edge-insets-constructor","description":"If any value, passed to EdgeInsets.fromLTRB, equals 0, then EdgeInsets.fromLTRB should be replaced with EdgeInsets.only passing all non-zero values. If passed values are symmetric, then EdgeInsets.fromLTRB or EdgeInsets.only should be replaced with EdgeInsets.symmetric.","sidebar":"sidebar"},"rules/flutter/prefer-extracting-callbacks":{"id":"rules/flutter/prefer-extracting-callbacks","title":"prefer-extracting-callbacks","description":"Warns about inline callbacks in a widget tree and suggests to extract them to widget methods in order to make a build method more readable. In addition extracting can help test those methods separately as well.","sidebar":"sidebar"},"rules/flutter/prefer-single-widget-per-file":{"id":"rules/flutter/prefer-single-widget-per-file","title":"prefer-single-widget-per-file","description":"Warns when a file contains more than a single widget.","sidebar":"sidebar"},"rules/flutter/prefer-using-list-view":{"id":"rules/flutter/prefer-using-list-view","title":"prefer-using-list-view","description":"Warns when a Column widget with only children parameter is wrapped in a SingleChildScrollView widget.","sidebar":"sidebar"},"rules/flutter/use-setstate-synchronously":{"id":"rules/flutter/use-setstate-synchronously","title":"use-setstate-synchronously","description":"Warns when [setState] is called past an await point (also known as asynchronous gap) within a subclass of State.","sidebar":"sidebar"},"rules/index":{"id":"rules/index","title":"Rules","description":"General rules configuration is described here.","sidebar":"sidebar"},"rules/intl/prefer-intl-name":{"id":"rules/intl/prefer-intl-name","title":"prefer-intl-name","description":"Recommends to use $_${ClassMemberName} pattern for name argument in Intl.message(), Intl.plural(), Intl.gender(), Intl.select() methods.","sidebar":"sidebar"},"rules/intl/prefer-provide-intl-description":{"id":"rules/intl/prefer-provide-intl-description","title":"prefer-provide-intl-description","description":"Warns when the Intl.message(), Intl.plural(), Intl.gender() or Intl.select() methods are invoked without a description.","sidebar":"sidebar"},"rules/intl/provide-correct-intl-args":{"id":"rules/intl/provide-correct-intl-args","title":"provide-correct-intl-args","description":"Warns when the Intl.message() invocation has incorrect args list.","sidebar":"sidebar"}}}')}}]);