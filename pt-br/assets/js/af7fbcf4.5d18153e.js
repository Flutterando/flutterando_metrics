"use strict";(self.webpackChunkflutterando_metrics_website=self.webpackChunkflutterando_metrics_website||[]).push([[126],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),m=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return o.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=m(n),u=r,f=s["".concat(c,".").concat(u)]||s[u]||d[u]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:r,i[1]=l;for(var m=2;m<a;m++)i[m]=n[m];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9399:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var o=n(7462),r=(n(7294),n(3905));const a={},i="Complexidade Ciclom\xe1tica",l={unversionedId:"metrics/cyclomatic-complexity",id:"metrics/cyclomatic-complexity",title:"Complexidade Ciclom\xe1tica",description:"N\xfamero de caminhos linearmente independentes atrav\xe9s de um bloco de c\xf3digo. Operadores condicionais ou loops aumentam o n\xfamero de caminhos em um c\xf3digo. Quanto mais caminhos, maior o n\xfamero de casos de teste que precisam ser implementados. A m\xe9trica segue a defini\xe7\xe3o original de McCabe:",source:"@site/i18n/pt-br/docusaurus-plugin-content-docs/current/metrics/cyclomatic-complexity.md",sourceDirName:"metrics",slug:"/metrics/cyclomatic-complexity",permalink:"/flutterando_metrics/pt-br/docs/metrics/cyclomatic-complexity",draft:!1,editUrl:"https://github.com/Flutterando/flutterando_metrics/tree/master/website/docs/metrics/cyclomatic-complexity.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Lista Longa de Par\xe2metros",permalink:"/flutterando_metrics/pt-br/docs/metrics/anti-patterns/long-parameter-list"},next:{title:"Volume de Halstead",permalink:"/flutterando_metrics/pt-br/docs/metrics/halstead-volume"}},c={},m=[{value:"Exemplo de Configura\xe7\xe3o",id:"config-example",level:2},{value:"Exemplo",id:"example",level:2}],p={toc:m},s="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"complexidade-ciclom\xe1tica"},"Complexidade Ciclom\xe1tica"),(0,r.kt)("p",null,"N\xfamero de caminhos linearmente independentes atrav\xe9s de um bloco de c\xf3digo. Operadores condicionais ou loops aumentam o n\xfamero de caminhos em um c\xf3digo. Quanto mais caminhos, maior o n\xfamero de casos de teste que precisam ser implementados. A m\xe9trica segue a defini\xe7\xe3o original de McCabe:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"M\xe9todos t\xeam uma complexidade base de 1."),(0,r.kt)("li",{parentName:"ul"},"cada declara\xe7\xe3o de fluxo de controle (",(0,r.kt)("inlineCode",{parentName:"li"},"if"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"catch"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"throw"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"do"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"while"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"for"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"break"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"continue"),") e express\xe3o condicional (",(0,r.kt)("inlineCode",{parentName:"li"},"? ... : ..."),") aumentam a complexidade."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"else"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"finally")," e ",(0,r.kt)("inlineCode",{parentName:"li"},"default")," n\xe3o contam."),(0,r.kt)("li",{parentName:"ul"},"alguns operadores como ",(0,r.kt)("inlineCode",{parentName:"li"},"&&"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"||"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"?."),", ",(0,r.kt)("inlineCode",{parentName:"li"},"??")," e ",(0,r.kt)("inlineCode",{parentName:"li"},"??=")," tamb\xe9m aumentam a complexidade.")),(0,r.kt)("h2",{id:"config-example"},"Exemplo de Configura\xe7\xe3o"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"flutterando_metrics:\n  ...\n  metrics:\n    ...\n    cyclomatic-complexity: 20\n    ...\n")),(0,r.kt)("h2",{id:"example"},"Exemplo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"void visitBlock(Token firstToken, Token lastToken) {\n  const tokenTypes = [\n    TokenType.AMPERSAND_AMPERSAND,\n    TokenType.BAR_BAR,\n    TokenType.QUESTION_PERIOD,\n    TokenType.QUESTION_QUESTION,\n    TokenType.QUESTION_QUESTION_EQ,\n  ];\n\n  var token = firstToken;\n  while (token != lastToken) {\n    if (token.matchesAny(tokenTypes)) {\n      _increaseComplexity(token);\n    }\n\n    token = token.next;\n  }\n}\n")),(0,r.kt)("p",null,"A ",(0,r.kt)("strong",{parentName:"p"},"Complexidade Ciclom\xe1tica")," para a fun\xe7\xe3o exemplo \xe9 ",(0,r.kt)("strong",{parentName:"p"},"3"),"."))}d.isMDXComponent=!0}}]);