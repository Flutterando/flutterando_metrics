"use strict";(self.webpackChunkflutterando_metrics_website=self.webpackChunkflutterando_metrics_website||[]).push([[528],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(t),p=a,f=d["".concat(l,".").concat(p)]||d[p]||m[p]||i;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=p;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[d]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9729:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(7294),a=t(5321);function i(e){let{version:n,severity:t,hasConfig:i,hasFix:s,isDeprecated:o}=e;return r.createElement("div",{className:"single-rule-info"},r.createElement(a.Z,{version:n,severity:t,hasConfig:i,hasFix:s,isDeprecated:o}))}},5321:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(7294);function a(e){let{hasConfig:n,hasFix:t,isDeprecated:a}=e;return r.createElement("div",{className:"rule-options"},n&&r.createElement("span",{title:"Configurable"},"\u2699\ufe0f"),t&&r.createElement("span",{title:"Has auto-fix"},"\ud83d\udee0"),a&&r.createElement("span",{title:"Deprecated"},"\u26a0\ufe0f"))}function i(e){let{severity:n,version:t,hasConfig:i,hasFix:s,isDeprecated:o}=e;const l=null==n?void 0:n.toLowerCase();return r.createElement("div",{className:"rule-additional-info"},r.createElement("div",null,r.createElement("span",{className:"added-in-label"},"added in:")," ",t),r.createElement("div",{className:`rule-severity ${l}`},l),r.createElement(a,{hasConfig:i,hasFix:s,isDeprecated:o}))}},5745:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=t(7462),a=(t(7294),t(3905)),i=t(9729);const s={},o=void 0,l={unversionedId:"rules/common/list-all-equatable-fields",id:"rules/common/list-all-equatable-fields",title:"list-all-equatable-fields",description:"Warns when a field is not added to props getter of a class that extends Equtable or EquatableMixin.",source:"@site/docs/rules/common/list-all-equatable-fields.mdx",sourceDirName:"rules/common",slug:"/rules/common/list-all-equatable-fields",permalink:"/flutterando_metrics/docs/rules/common/list-all-equatable-fields",draft:!1,editUrl:"https://github.com/Flutterando/flutterando_metrics/tree/master/website/docs/rules/common/list-all-equatable-fields.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"format-comment",permalink:"/flutterando_metrics/docs/rules/common/format-comment"},next:{title:"member-ordering",permalink:"/flutterando_metrics/docs/rules/common/member-ordering"}},c={},u=[{value:"Example",id:"example",level:3}],d={toc:u},m="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{version:"5.3.0",severity:"warning",mdxType:"RuleDetails"}),(0,a.kt)("p",null,"Warns when a field is not added to ",(0,a.kt)("inlineCode",{parentName:"p"},"props")," getter of a class that extends ",(0,a.kt)("inlineCode",{parentName:"p"},"Equtable")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"EquatableMixin"),"."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This rule is specific to ",(0,a.kt)("a",{parentName:"p",href:"https://pub.dev/packages/equatable"},(0,a.kt)("inlineCode",{parentName:"a"},"equatable")," package"),". Enable it only if you use this package.")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u274c Bad:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class AnotherPerson extends Equatable {\n  const AnotherPerson(this.name, this.age);\n\n  final String name;\n\n  final int age;\n\n  @override\n  List<Object> get props => [name]; // LINT\n}\n\nclass AndAnotherPerson extends Equatable {\n  static final someProp = 'hello';\n\n  const AndAnotherPerson(this.name);\n\n  final String name;\n\n  @override\n  List<Object> get props => [name];\n}\n\nclass SubPerson extends AndAnotherPerson {\n  const SubPerson(this.value, String name) : super();\n\n  final int value;\n\n  @override\n  List<Object> get props {\n    return super.props..addAll([]); // LINT\n  }\n}\n\nclass EquatableDateTimeSubclass extends EquatableDateTime {\n  final int century;\n\n  EquatableDateTimeSubclass(\n    this.century,\n    int year, [\n    int month = 1,\n    int day = 1,\n    int hour = 0,\n    int minute = 0,\n    int second = 0,\n    int millisecond = 0,\n    int microsecond = 0,\n  ]) : super(year, month, day, hour, minute, second, millisecond, microsecond);\n\n  @override\n  List<Object> get props => super.props..addAll([]); // LINT\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u2705 Good:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class AnotherPerson extends Equatable {\n  const AnotherPerson(this.name, this.age);\n\n  final String name;\n\n  final int age;\n\n  @override\n  List<Object> get props => [name, age];\n}\n\nclass AndAnotherPerson extends Equatable {\n  static final someProp = 'hello';\n\n  const AndAnotherPerson(this.name);\n\n  final String name;\n\n  @override\n  List<Object> get props => [name];\n}\n\nclass SubPerson extends AndAnotherPerson {\n  const SubPerson(this.value, String name) : super();\n\n  final int value;\n\n  @override\n  List<Object> get props {\n    return super.props..addAll([value]);\n  }\n}\n\nclass EquatableDateTimeSubclass extends EquatableDateTime {\n  final int century;\n\n  EquatableDateTimeSubclass(\n    this.century,\n    int year, [\n    int month = 1,\n    int day = 1,\n    int hour = 0,\n    int minute = 0,\n    int second = 0,\n    int millisecond = 0,\n    int microsecond = 0,\n  ]) : super(year, month, day, hour, minute, second, millisecond, microsecond);\n\n  @override\n  List<Object> get props => super.props..addAll([century]);\n}\n")))}p.isMDXComponent=!0}}]);