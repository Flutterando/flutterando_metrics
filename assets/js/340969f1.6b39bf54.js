"use strict";(self.webpackChunkflutterando_metrics_website=self.webpackChunkflutterando_metrics_website||[]).push([[2681],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),c=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=i,f=u["".concat(o,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,s=new Array(a);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:i,s[1]=l;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9729:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(7294),i=r(5321);function a(e){let{version:t,severity:r,hasConfig:a,hasFix:s,isDeprecated:l}=e;return n.createElement("div",{className:"single-rule-info"},n.createElement(i.Z,{version:t,severity:r,hasConfig:a,hasFix:s,isDeprecated:l}))}},5321:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(7294);function i(e){let{hasConfig:t,hasFix:r,isDeprecated:i}=e;return n.createElement("div",{className:"rule-options"},t&&n.createElement("span",{title:"Configurable"},"\u2699\ufe0f"),r&&n.createElement("span",{title:"Has auto-fix"},"\ud83d\udee0"),i&&n.createElement("span",{title:"Deprecated"},"\u26a0\ufe0f"))}function a(e){let{severity:t,version:r,hasConfig:a,hasFix:s,isDeprecated:l}=e;const o=null==t?void 0:t.toLowerCase();return n.createElement("div",{className:"rule-additional-info"},n.createElement("div",null,n.createElement("span",{className:"added-in-label"},"added in:")," ",r),n.createElement("div",{className:`rule-severity ${o}`},o),n.createElement(i,{hasConfig:a,hasFix:s,isDeprecated:l}))}},8784:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=r(7462),i=(r(7294),r(3905)),a=r(9729);const s={},l=void 0,o={unversionedId:"rules/flutter/avoid-shrink-wrap-in-lists",id:"rules/flutter/avoid-shrink-wrap-in-lists",title:"avoid-shrink-wrap-in-lists",description:"Warns when a ListView widget with shrinkWrap parameter is wrapped in a Column, Row or another ListView widget.",source:"@site/docs/rules/flutter/avoid-shrink-wrap-in-lists.mdx",sourceDirName:"rules/flutter",slug:"/rules/flutter/avoid-shrink-wrap-in-lists",permalink:"/flutterando_metrics/docs/rules/flutter/avoid-shrink-wrap-in-lists",draft:!1,editUrl:"https://github.com/Flutterando/flutterando_metrics/tree/master/website/docs/rules/flutter/avoid-shrink-wrap-in-lists.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"avoid-returning-widgets",permalink:"/flutterando_metrics/docs/rules/flutter/avoid-returning-widgets"},next:{title:"avoid-unnecessary-setstate",permalink:"/flutterando_metrics/docs/rules/flutter/avoid-unnecessary-setstate"}},c={},p=[{value:"Example",id:"example",level:3}],u={toc:p},d="wrapper";function m(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(a.Z,{version:"4.17.0",severity:"performance",mdxType:"RuleDetails"}),(0,i.kt)("p",null,"Warns when a ",(0,i.kt)("inlineCode",{parentName:"p"},"ListView")," widget with ",(0,i.kt)("inlineCode",{parentName:"p"},"shrinkWrap")," parameter is wrapped in a ",(0,i.kt)("inlineCode",{parentName:"p"},"Column"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Row")," or another ",(0,i.kt)("inlineCode",{parentName:"p"},"ListView")," widget."),(0,i.kt)("p",null,"According to the Flutter documentation, using ",(0,i.kt)("inlineCode",{parentName:"p"},"shrinkWrap")," in lists is expensive performance-wise and should be avoided, since using slivers is significantly cheaper and achieves the same or even better results."),(0,i.kt)("p",null,"Additional resources:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/dart-lang/linter/issues/3496"},"https://github.com/dart-lang/linter/issues/3496"))),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u274c Bad:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Column(\n  children: [\n    Expanded(\n      // LINT\n      child: ListView(\n        shrinkWrap: true,\n        physics: const NeverScrollableScrollPhysics(),\n        children: [],\n      ),\n    ),\n  ],\n),\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u2705 Good:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"CustomScrollView(\n  slivers: [\n    SliverList(\n      delegate: SliverChildBuilderDelegate(\n        (context, index) => Container(),\n        childCount: someObject.length,\n      ),\n    ),\n  ],\n),\n")))}m.isMDXComponent=!0}}]);