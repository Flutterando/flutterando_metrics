"use strict";(self.webpackChunkflutterando_metrics_website=self.webpackChunkflutterando_metrics_website||[]).push([[1060],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,k=m["".concat(u,".").concat(d)]||m[d]||p[d]||l;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={},i="CLI",o={unversionedId:"cli/index",id:"cli/index",title:"CLI",description:"To use the package as a command-line tool, run",source:"@site/docs/cli/index.md",sourceDirName:"cli",slug:"/cli/",permalink:"/flutterando_metrics/docs/cli/",draft:!1,editUrl:"https://github.com/Flutterando/flutterando_metrics/tree/master/website/docs/cli/index.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Analyzer Plugin",permalink:"/flutterando_metrics/docs/analyzer-plugin"},next:{title:"Analyze",permalink:"/flutterando_metrics/docs/cli/analyze"}},u={},c=[{value:"Available commands",id:"available-commands",level:2},{value:"Multi-package repositories usage",id:"multi-package-repositories-usage",level:2},{value:"Calling the cli from your own package with the linter configuration",id:"calling-the-cli-from-your-own-package-with-the-linter-configuration",level:2}],s={toc:c},m="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cli"},"CLI"),(0,r.kt)("p",null,"To use the package as a command-line tool, run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ dart run flutterando_metrics:metrics <command> lib\n\n# or for a Flutter package\n$ flutter pub run flutterando_metrics:metrics <command> lib\n")),(0,r.kt)("p",null,"Alternatively, the package can be installed globally"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ dart pub global activate flutterando_metrics\n$ metrics <command> lib\n\n# or for a Flutter package\n$ flutter pub global activate flutterando_metrics\n$ metrics <command> lib\n")),(0,r.kt)("p",null,"It will produce a result in one of the supported formats:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Console"),(0,r.kt)("li",{parentName:"ul"},"GitHub"),(0,r.kt)("li",{parentName:"ul"},"Checkstyle"),(0,r.kt)("li",{parentName:"ul"},"Codeclimate"),(0,r.kt)("li",{parentName:"ul"},"HTML"),(0,r.kt)("li",{parentName:"ul"},"JSON")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," you need to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"rules")," entry in the ",(0,r.kt)("inlineCode",{parentName:"p"},"analysis_options.yaml")," to have rules report included into the result."),(0,r.kt)("h2",{id:"available-commands"},"Available commands"),(0,r.kt)("p",null,"The following table shows which commands you can use with the tool:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Example of use"),(0,r.kt)("th",{parentName:"tr",align:null},"Short description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"analyze"),(0,r.kt)("td",{parentName:"tr",align:null},"dart run flutterando_metrics:metrics analyze lib"),(0,r.kt)("td",{parentName:"tr",align:null},"Reports code metrics, rules and anti-patterns violations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"check-unnecessary-nullable"),(0,r.kt)("td",{parentName:"tr",align:null},"dart run flutterando_metrics:metrics check-unnecessary-nullable lib"),(0,r.kt)("td",{parentName:"tr",align:null},"Checks unnecessary nullable parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"check-unused-files"),(0,r.kt)("td",{parentName:"tr",align:null},"dart run flutterando_metrics:metrics check-unused-files lib"),(0,r.kt)("td",{parentName:"tr",align:null},"Checks unused ","*",".dart files.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"check-unused-l10n"),(0,r.kt)("td",{parentName:"tr",align:null},"dart run flutterando_metrics:metrics check-unused-l10n lib"),(0,r.kt)("td",{parentName:"tr",align:null},"Checks unused localization in *.dart files.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"check-unused-code"),(0,r.kt)("td",{parentName:"tr",align:null},"dart run flutterando_metrics:metrics check-unused-code lib"),(0,r.kt)("td",{parentName:"tr",align:null},"Checks unused code in *.dart files.")))),(0,r.kt)("p",null,"For additional help on any of the commands, enter ",(0,r.kt)("inlineCode",{parentName:"p"},"dart run flutterando_metrics:metrics help <command>")),(0,r.kt)("h2",{id:"multi-package-repositories-usage"},"Multi-package repositories usage"),(0,r.kt)("p",null,"If you run a command from the root of a multi-package repository (aka monorepo), it'll pick up ",(0,r.kt)("inlineCode",{parentName:"p"},"analysis_options.yaml")," files correctly."),(0,r.kt)("p",null,"Additionally, if you use ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/melos"},"Melos"),", you can add custom command to the ",(0,r.kt)("inlineCode",{parentName:"p"},"melos.yaml"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="melos.yaml"',title:'"melos.yaml"'},'metrics:\n  run: |\n    melos exec -c 1 --ignore="*example*" -- \\\n      flutter pub run flutterando_metrics:metrics analyze lib\n  description: |\n    Run `flutterando_metrics` in all packages.\n     - Note: you can also rely on your IDEs Dart Analysis / Issues window.\n')),(0,r.kt)("h2",{id:"calling-the-cli-from-your-own-package-with-the-linter-configuration"},"Calling the cli from your own package with the linter configuration"),(0,r.kt)("p",null,"If you have a separate package with all the linter and DCM configurations which is used by your other packages and you want to call DCM transitively add a ",(0,r.kt)("inlineCode",{parentName:"p"},"bin")," folder with a Dart file, for example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart",metastring:"metrics.dart","metrics.dart":!0},"import 'package:flutterando_metrics/cli_runner.dart';\n\nFuture<void> main(List<String> args) async {\n  await CliRunner().run(args);\n}\n")),(0,r.kt)("p",null,"After that you will be able to run DCM by calling your package executable."))}p.isMDXComponent=!0}}]);