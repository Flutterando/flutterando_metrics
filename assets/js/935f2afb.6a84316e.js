"use strict";(self.webpackChunkflutterando_metrics_website=self.webpackChunkflutterando_metrics_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"link","label":"Introduction","href":"/flutterando_metrics/docs/introduction","docId":"introduction"},{"type":"category","label":"Getting started","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Installation and Usage","href":"/flutterando_metrics/docs/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Configuration","href":"/flutterando_metrics/docs/getting-started/configuration","docId":"getting-started/configuration"}]},{"type":"category","label":"Command Line Interface","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Check unnecessary nullable parameters","href":"/flutterando_metrics/docs/cli/check-unnecessary-nullable","docId":"cli/check-unnecessary-nullable"},{"type":"link","label":"Check unused code","href":"/flutterando_metrics/docs/cli/check-unused-code","docId":"cli/check-unused-code"},{"type":"link","label":"Check unused files","href":"/flutterando_metrics/docs/cli/check-unused-files","docId":"cli/check-unused-files"},{"type":"link","label":"Check unused l10n","href":"/flutterando_metrics/docs/cli/check-unused-l10n","docId":"cli/check-unused-l10n"}],"href":"/flutterando_metrics/docs/cli/"},{"type":"category","label":"Metrics","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Anti-patterns","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Long Method","href":"/flutterando_metrics/docs/metrics/anti-patterns/long-method","docId":"metrics/anti-patterns/long-method"},{"type":"link","label":"Long Parameter List","href":"/flutterando_metrics/docs/metrics/anti-patterns/long-parameter-list","docId":"metrics/anti-patterns/long-parameter-list"}],"href":"/flutterando_metrics/docs/metrics/anti-patterns/"},{"type":"link","label":"Cyclomatic Complexity","href":"/flutterando_metrics/docs/metrics/cyclomatic-complexity","docId":"metrics/cyclomatic-complexity"},{"type":"link","label":"Halstead Volume","href":"/flutterando_metrics/docs/metrics/halstead-volume","docId":"metrics/halstead-volume"},{"type":"link","label":"Lines of Code","href":"/flutterando_metrics/docs/metrics/lines-of-code","docId":"metrics/lines-of-code"},{"type":"link","label":"Maintainability Index","href":"/flutterando_metrics/docs/metrics/maintainability-index","docId":"metrics/maintainability-index"},{"type":"link","label":"Maximum Nesting","href":"/flutterando_metrics/docs/metrics/maximum-nesting-level","docId":"metrics/maximum-nesting-level"},{"type":"link","label":"Number of Methods","href":"/flutterando_metrics/docs/metrics/number-of-methods","docId":"metrics/number-of-methods"},{"type":"link","label":"Number of Parameters","href":"/flutterando_metrics/docs/metrics/number-of-parameters","docId":"metrics/number-of-parameters"},{"type":"link","label":"Source lines of Code","href":"/flutterando_metrics/docs/metrics/source-lines-of-code","docId":"metrics/source-lines-of-code"},{"type":"link","label":"Technical Debt","href":"/flutterando_metrics/docs/metrics/technical_debt","docId":"metrics/technical_debt"},{"type":"link","label":"Weight Of a Class","href":"/flutterando_metrics/docs/metrics/weight-of-class","docId":"metrics/weight-of-class"}],"href":"/flutterando_metrics/docs/metrics/"},{"type":"category","label":"Integrations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Codemagic","href":"/flutterando_metrics/docs/integrations/codemagic","docId":"integrations/codemagic"},{"type":"link","label":"GitHub Action","href":"/flutterando_metrics/docs/integrations/github-action","docId":"integrations/github-action"}]}]},"docs":{"cli/check-unnecessary-nullable":{"id":"cli/check-unnecessary-nullable","title":"Check unnecessary nullable parameters","description":"Checks unnecessary nullable parameters in functions, methods, constructors. Removing unnecessary nullables can help reduce amount of checks in the code.","sidebar":"sidebar"},"cli/check-unused-code":{"id":"cli/check-unused-code","title":"Check unused code","description":"Checks unused classes, functions, top level variables, extensions, enums, mixins and type aliases.","sidebar":"sidebar"},"cli/check-unused-files":{"id":"cli/check-unused-files","title":"Check unused files","description":"Checks unused *.dart files. To execute the command, run","sidebar":"sidebar"},"cli/check-unused-l10n":{"id":"cli/check-unused-l10n","title":"Check unused l10n","description":"Checks unused Dart class members, that encapsulates the app\u2019s localized values.","sidebar":"sidebar"},"cli/index":{"id":"cli/index","title":"CLI","description":"To use the package as a command-line tool, run","sidebar":"sidebar"},"getting-started/configuration":{"id":"getting-started/configuration","title":"Configuration","description":"To configure the package add a flutterandometrics entry to analysisoptions.yaml. This configuration is used by both CLI and the analyzer plugin.","sidebar":"sidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installing the package","description":"To install the package as a dev dependency run","sidebar":"sidebar"},"integrations/codemagic":{"id":"integrations/codemagic","title":"Codemagic","description":"Codemagic is a CI/CD solution which helps you test and release your Flutter apps with zero configuration and no pain.","sidebar":"sidebar"},"integrations/github-action":{"id":"integrations/github-action","title":"GitHub Action","description":"Flutterando Metrics GitHub Action allows you to integrate Flutterando Metrics into your CI/CD process and get code quality reports inside PR\'s.","sidebar":"sidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"Flutterando Metrics is a static analysis tool that helps you analyse and improve your code quality.","sidebar":"sidebar"},"metrics/anti-patterns/index":{"id":"metrics/anti-patterns/index","title":"Anti-patterns","description":"Anti-patterns configuration is described here.","sidebar":"sidebar"},"metrics/anti-patterns/long-method":{"id":"metrics/anti-patterns/long-method","title":"Long Method","description":"Long blocks of code are difficult to reuse and understand because they are usually responsible for more than one thing. Separating those to several short ones with proper names helps you reuse your code and understand it better without reading methods body.","sidebar":"sidebar"},"metrics/anti-patterns/long-parameter-list":{"id":"metrics/anti-patterns/long-parameter-list","title":"Long Parameter List","description":"Long parameter lists are difficult to understand and use. Wrapping them into an object allows grouping parameters and change transferred data only by the object modification. When you\'re working with objects, you should pass just enough so that the method can get the data it needs.","sidebar":"sidebar"},"metrics/cyclomatic-complexity":{"id":"metrics/cyclomatic-complexity","title":"Cyclomatic Complexity","description":"Number of linearly independent paths through a block of code. Conditional operators or loops increases the number of paths in a code. The more paths, the higher the number of test cases that need to be implemented. The metric complies with McCabe\'s original definition:","sidebar":"sidebar"},"metrics/halstead-volume":{"id":"metrics/halstead-volume","title":"Halstead Volume","description":"The Halstead metrics are based on the numbers of operators and operands.","sidebar":"sidebar"},"metrics/index":{"id":"metrics/index","title":"Metrics","description":"Metrics are grouped by a category to help you understand their purpose.","sidebar":"sidebar"},"metrics/lines-of-code":{"id":"metrics/lines-of-code","title":"Lines of Code","description":"The lines of code are the total number of lines in a method (or function). The comment lines, and the blank lines are also counted. A longer method is often difficult to maintain, tend to do a lot of things and can make it hard following what\'s going on.","sidebar":"sidebar"},"metrics/maintainability-index":{"id":"metrics/maintainability-index","title":"Maintainability Index","description":"Maintainability Index is a software metric which measures how maintainable (easy to support and change) the source code is. The maintainability index is calculated as a factored formula consisting of Source Lines Of Code, Cyclomatic Complexity and Halstead Volume.","sidebar":"sidebar"},"metrics/maximum-nesting-level":{"id":"metrics/maximum-nesting-level","title":"Maximum Nesting","description":"Maximum Nesting Level this is the maximum level of nesting blocks / control structures that are present in a method (or function). Code with deep nesting level are often complex and tough to maintain.","sidebar":"sidebar"},"metrics/number-of-methods":{"id":"metrics/number-of-methods","title":"Number of Methods","description":"The number of methods is the total number of methods in a class (or mixin, or extension). Too many methods indicate a high complexity.","sidebar":"sidebar"},"metrics/number-of-parameters":{"id":"metrics/number-of-parameters","title":"Number of Parameters","description":"The number of parameters is the number of parameters received by a method (or function). If a method receive too many parameters, it is difficult to call and also difficult to change if it\'s called from many places.","sidebar":"sidebar"},"metrics/source-lines-of-code":{"id":"metrics/source-lines-of-code","title":"Source lines of Code","description":"Source lines of Code is an approximate number of source code lines in a function or method. Blank or comment lines are not counted.","sidebar":"sidebar"},"metrics/technical_debt":{"id":"metrics/technical_debt","title":"Technical Debt","description":"The cost of additional rework caused by choosing an easy (limited) solution now instead of using a better approach that would take longer. The metric count debt based on pattern:","sidebar":"sidebar"},"metrics/weight-of-class":{"id":"metrics/weight-of-class","title":"Weight Of a Class","description":"Number of functional public methods divided by the total number of public methods.","sidebar":"sidebar"}}}')}}]);